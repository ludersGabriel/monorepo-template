services:
  monorepo-database:
    image: postgres:16
    restart: always

    container_name: monorepo-db
    hostname: monorepo-db

    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    ports:
      - ${POSTGRES_PORT}:5432

    networks:
      - monorepo-network

    volumes:
      - monorepo-data-psql:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro

  monorepo-minio-storage:
    image: minio/minio:RELEASE.2025-02-03T21-03-04Z
    restart: always

    container_name: monorepo-minio-storage
    hostname: monorepo-minio-storage

    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

    command: server --console-address ":9001" /data

    healthcheck:
      test: [CMD, mc, ready, local]
      interval: 5s
      timeout: 5s
      retries: 5

    ports:
      - ${MINIO_PORT}:9000
      - ${MINIO_CONSOLE_PORT}:9001

    networks:
      - monorepo-network

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - monorepo-data-minio:/data

  monorepo-minio-init:
    image: minio/minio:RELEASE.2025-02-03T21-03-04Z

    container_name: monorepo-minio-init
    hostname: monorepo-minio-init

    entrypoint: /bin/bash -c
    command: |
      "
      sleep 5;
      mc config host add myminio http://monorepo-minio-storage:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb --ignore-existing myminio/${S3_BUCKET}
      "

    depends_on:
      - monorepo-minio-storage

    networks:
      - monorepo-network

volumes:
  monorepo-data-psql:
  monorepo-data-minio:

networks:
  monorepo-network:
